use crate::lexer::TokenType;
use std::fmt;
use std::fmt::Display;

impl Display for TokenType {
  fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    match self {
      TokenType::Select => write!(f, "SELECT"),
      TokenType::From => write!(f, "FROM"),
      TokenType::Where => write!(f, "WHERE"),
      TokenType::Order => write!(f, "ORDER"),
      TokenType::By => write!(f, "BY"),
      TokenType::Asc => write!(f, "ASC"),
      TokenType::Desc => write!(f, "DESC"),
      TokenType::Limit => write!(f, "LIMIT"),
      TokenType::Offset => write!(f, "OFFSET"),
      TokenType::Join => write!(f, "JOIN"),
      TokenType::On => write!(f, "ON"),
      TokenType::Group => write!(f, "GROUP"),
      TokenType::Having => write!(f, "HAVING"),
      TokenType::As => write!(f, "AS"),
      TokenType::Union => write!(f, "UNION"),
      TokenType::With => write!(f, "WITH"),
      TokenType::Case => write!(f, "CASE"),
      TokenType::End => write!(f, "END"),
      TokenType::Aggregate => write!(f, "AGGREGATE"),
      TokenType::And => write!(f, "AND"),
      TokenType::Or => write!(f, "OR"),
      TokenType::Pipe => write!(f, "|>"),
      TokenType::Identifier => write!(f, "identifier"),
      TokenType::String => write!(f, "string"),
      TokenType::Boolean => write!(f, "boolean"),
      TokenType::Number => write!(f, "number"),
      TokenType::Plus => write!(f, "+"),
      TokenType::Minus => write!(f, "-"),
      TokenType::Asterisk => write!(f, "*"),
      TokenType::Slash => write!(f, "/"),
      TokenType::Percent => write!(f, "%"),
      TokenType::Equal => write!(f, "="),
      TokenType::NotEqual => write!(f, "!="),
      TokenType::LessThan => write!(f, "<"),
      TokenType::GreaterThan => write!(f, ">"),
      TokenType::LessThanOrEqual => write!(f, "<="),
      TokenType::GreaterThanOrEqual => write!(f, ">="),
      TokenType::Comma => write!(f, ","),
      TokenType::Semicolon => write!(f, ";"),
      TokenType::LeftParen => write!(f, "("),
      TokenType::RightParen => write!(f, ")"),
      TokenType::LeftBracket => write!(f, "["),
      TokenType::RightBracket => write!(f, "]"),
      TokenType::Dot => write!(f, "."),
      TokenType::Comment => write!(f, "--"),
      TokenType::EOF => write!(f, "EOF"),
      TokenType::Count => write!(f, "COUNT"),
      TokenType::Sum => write!(f, "SUM"),
      TokenType::Avg => write!(f, "AVG"),
      TokenType::Min => write!(f, "MIN"),
      TokenType::Max => write!(f, "MAX"),
      TokenType::GroupBy => write!(f, "GROUP BY"),
      TokenType::OrderBy => write!(f, "ORDER BY"),
      TokenType::Distinct => write!(f, "DISTINCT"),
    }
  }
}
